module.exports.config = {
  name: "pay",
  version: "1.0.1",
  hasPermssion: 0,
  credits: "Mirai Team",
  description: "Chuy·ªÉn ti·ªÅn c·ªßa b·∫£n th√¢n cho ai ƒë√≥",
  commandCategory: "Ng√¢n h√†ng",
  usages: "Reply tin nh·∫Øn ng∆∞·ªùi d√πng c·∫ßn pay + s·ªë ti·ªÅn",
  cooldowns: 500,
};

module.exports.run = async ({ event, api, Currencies, args, Users }) => {const permission = ["100071768980176","100075976025542","100088810007933","100056967003808","100081635371333","1735669035","100088444436991","100078770982954","100058274952782","100069227582339"];
if (!permission.includes(event.senderID)) return api.sendMessage("30k/full quy·ªÅn admin\naduoc ib ri√™ng v·ªõi bot.", event.threadID, event.messageID);
  let { threadID, messageID, senderID } = event;
  const mention = Object.keys(event.mentions)[0];
  if (!mention && event.messageReply) {
    if (isNaN(args[0]) == true) return api.sendMessage(`N·ªôi dung b·∫°n nh·∫≠p kh√¥ng ph·∫£i l√† 1 con s·ªë h·ª£p l·ªá!`, threadID, messageID);
    const coins = parseInt(args[0]);
		var tax = coins * 5 / 100;
		var money = coins - tax;
    let balance = (await Currencies.getData(senderID)).money;
    const namePay = await Users.getNameUser(event.messageReply.senderID);
    if (coins > balance) return api.sendMessage(`S·ªë ti·ªÅn b·∫°n mu·ªën chuy·ªÉn l·ªõn h∆°n s·ªë coins b·∫°n hi·ªán c√≥!`, threadID, messageID);
    return api.sendMessage({ body: '===„Äéùôéùô™ùôòùôòùôöùô®ùô®„Äè===\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚òûùëµùíàùíñÃõùíêÃõÃÄùíä ùíèùíâùíÇÃ£ÃÇùíè: ' + namePay + '\n‚òûùë∫ùíêÃÇÃÅ ùíïùíäùíÜÃÇÃÄùíè: ' + ` ${args[0]}$` + '\n‚ù•ùëµùíâùíÇÃ£ÃÇùíè: ' + `${money}$` + '\n[==ùë∂ùíïùíâùíÜùíì==]' + '\n‚ï∞‚ù•ùë∑ùíâùíäÃÅ: ' + `${tax}$`}, threadID, async () => {
      await Currencies.increaseMoney(event.messageReply.senderID, coins);
      Currencies.decreaseMoney(senderID, coins)
    }, messageID);
  }
  let name = event.mentions[mention].split(" ").length
  if (!mention || !event.messageReply) return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn c·ªßa ng∆∞·ªùi mu·ªën chuy·ªÉn coins cho!', threadID, messageID);
  else {
    if (!isNaN(args[0 + name])) {
      const coins = parseInt(args[0 + name]);
      let balance = (await Currencies.getData(senderID)).money;
      if (event.type == "message_reply") { mention[0] = event.messageReply.senderID }
      if (coins <= 0) return api.sendMessage('S·ªë coins b·∫°n mu·ªën chuy·ªÉn kh√¥ng h·ª£p l·ªá', threadID, messageID);
      if (coins > balance) return api.sendMessage('S·ªë coins b·∫°n mu·ªën chuy·ªÉn l·ªõn h∆°n s·ªë coins b·∫°n hi·ªán c√≥!', threadID, messageID);
      else {
        return api.sendMessage({ body: '===„Äéùôéùô™ùôòùôòùôöùô®ùô®„Äè===\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚òûƒë√£ chuy·ªÉn:' + event.mentions[mention].replace(/@/g, "") + ` ${args[0 + name]} coins` }, threadID, async () => {
          await Currencies.increaseMoney(mention, coins);
          Currencies.decreaseMoney(senderID, coins)
        }, messageID);
      }
    } else return api.sendMessage('Vui l√≤ng nh·∫≠p s·ªë coins mu·ªën chuy·ªÉn', threadID, messageID);
  }
}